<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devops on 「Johny&#39;」PlayGround</title>
    <link>https://cdryzun.github.io/categories/devops/</link>
    <description>Recent content in devops on 「Johny&#39;」PlayGround</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 Oct 2023 20:40:24 +0800</lastBuildDate><atom:link href="https://cdryzun.github.io/categories/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python Fro DevOps 笔记</title>
      <link>https://cdryzun.github.io/post/python-fro-devops-notes/</link>
      <pubDate>Thu, 05 Oct 2023 20:40:24 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/python-fro-devops-notes/</guid>
      <description>笔记 2019 年，70%的开发者认为自己高于平均水平，而 10%的人认为自己低于平均水平。 相信自动化优于等级制度的信念正是 DevOps 的核心。 Windows 操作系统会临时关</description>
    </item>
    
    <item>
      <title>Argocd Cli Usage Tips</title>
      <link>https://cdryzun.github.io/post/argocd-cli-usage-tips/</link>
      <pubDate>Mon, 24 Jul 2023 14:19:17 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/argocd-cli-usage-tips/</guid>
      <description>说明 此篇文档，用于记录在使用 ArgoCD CLi 的过程中，所使用到的一些常用命令，且供参考。 使用记录 ArgoCD cli 安装文档，使用前，配置登录 1 argocd login xxx.argocd.xx 一键 关闭 ArgoCD 下某个 Project</description>
    </item>
    
    <item>
      <title>Git Docs</title>
      <link>https://cdryzun.github.io/post/git-docs/</link>
      <pubDate>Fri, 23 Jun 2023 17:07:38 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/git-docs/</guid>
      <description>常用进阶命令 指定特定仓库拉取代码 1 2 3 4 5 6 7 8 9 git remote add origin $giturl git pull $giturl master git branch --set-upstream-to=origin/master git status git pull 更改远程仓库地址 1 2 3 4 5 6 7 8 9 git remote -v git remote set-url origin $git_url git pull origin master</description>
    </item>
    
    <item>
      <title>Rke 集群集成 Kube-Vip 实现 Loadbalance Service 资源的使用</title>
      <link>https://cdryzun.github.io/post/rke-kubevip-loadbalance/</link>
      <pubDate>Tue, 12 Oct 2021 13:44:45 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/rke-kubevip-loadbalance/</guid>
      <description>背景 Kube-Vip 最初是为 Kubernetes 控制平面提供 HA 解决方案而创建的，随着时间的推移，它已经发展为将相同的功能合并到 Kubernetes 的 LoadBalancer 类型的 Service 中。Kube-Vip 特点 如下： VIP</description>
    </item>
    
    <item>
      <title>记录一次 Nexus3 Pypi 私服 Blob Storage 异常的修复</title>
      <link>https://cdryzun.github.io/post/nexus3-pypi-blob-storage-fix/</link>
      <pubDate>Thu, 22 Jul 2021 15:38:00 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/nexus3-pypi-blob-storage-fix/</guid>
      <description>说明 在 devops 集成环境中的 测试环境 中，今天发现有几条 pipeline 一直是在构建超时状态。初步查看了一下，以为是哪个 依赖版本的兼容性有些问题, 导致 pip 一直是找不到</description>
    </item>
    
    <item>
      <title>记录一次 JupyterLab 插件打包问题的修复</title>
      <link>https://cdryzun.github.io/post/pipeline-jupyter-labextension-build-fix/</link>
      <pubDate>Tue, 20 Jul 2021 17:04:26 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/pipeline-jupyter-labextension-build-fix/</guid>
      <description>背景 在所关联项目 的 jenkins pipeline ci 流水线中，开发告诉我 生成的 pip 包中未有生成相关的 labextension 依赖文件夹，导致 pip 包虽然是安装成功了，但仍是一个不可用的状态。开发人</description>
    </item>
    
    <item>
      <title>Docker-Compose 部署 Nexus3 Docker 私服，配置使用 Traefik 进行代理管理</title>
      <link>https://cdryzun.github.io/post/nexus-use-traefik-proxy/</link>
      <pubDate>Thu, 10 Jun 2021 09:51:36 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/nexus-use-traefik-proxy/</guid>
      <description>环境说明 软件版本说明 操作系统: CentOS 7.9.2009 Docker version: 20.10.7 Docker-compsoe version: 1.18.0 Mkcert version: v1.4.3 端口使用规划 nexus 私服端口 使用规划 私服名称 私服作用 私服类型 私服端口 docker-custom 存放，自定义 push的 镜</description>
    </item>
    
    <item>
      <title>在 Kubernetes 中使用 localPv 部署 Gitlab</title>
      <link>https://cdryzun.github.io/post/kubernetes-deploy-gitlab/</link>
      <pubDate>Tue, 01 Jun 2021 10:13:29 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/kubernetes-deploy-gitlab/</guid>
      <description>环境说明 Kubernetes Version: v1.20.4 Postgres Version: 12.7 Redis Version: 5.0.9 因在官方提供的 gitlab-ce 镜像中，内置了 Postgres &amp;amp; Redis 的安装，在实际生产使用过程中，想让其连接使用外部统一的服务进行使用，来合理统一</description>
    </item>
    
    <item>
      <title>使用 Helm 部署 Spinnaker 持续部署(CD)平台</title>
      <link>https://cdryzun.github.io/post/spinnaker-helm-installd/</link>
      <pubDate>Mon, 24 May 2021 16:33:49 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/spinnaker-helm-installd/</guid>
      <description>环境说明 Kubernetes Version: v1.17.9 操作系统: CentOS 7.8.2003 Helm Version: v3.2.1 Spinnaker Version: 1.26.3 spinnaker 版本说明 spinnaker 组件说明 Deck：前端web页面 端口9000 Gate：API网关，所有程序通过gate与</description>
    </item>
    
    <item>
      <title>使用 helm 在 Kubernetes 中部署 Nexus 私服</title>
      <link>https://cdryzun.github.io/post/helm-k8s-deploy-nexus/</link>
      <pubDate>Sun, 23 May 2021 15:50:31 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/helm-k8s-deploy-nexus/</guid>
      <description>环境说明 helm version: v3.3.1 kubernetes: v1.17.9 nexus: 3.29.0 部署 准备 storageClass 非 必要 操作，可以选择手动创建 pvc &amp;amp; pv，如果想部署 nfsStorageClass 的话，请参考早期整理的 文档。此篇文档实战部署步骤中基于 nfsStorageClass 进</description>
    </item>
    
    <item>
      <title>Rancher 开启监控后的，阈值告警配置说明 (三)</title>
      <link>https://cdryzun.github.io/post/rancher-monitor-config-third/</link>
      <pubDate>Wed, 19 May 2021 08:41:26 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/rancher-monitor-config-third/</guid>
      <description>环境说明 此文档为 rancher monitor 使用系列的 第三篇 ，主要介绍与 dingtalk 关联配置告警通知、prometheus 告警阈值的配置使用 配置安装 dingtalk webhook webhook github 地址 安装 kustomize 1 2 3 4</description>
    </item>
    
    <item>
      <title>Rancher 开启监控后，exporter/metrics 的添加说明 (二)</title>
      <link>https://cdryzun.github.io/post/rancher-monitor-config-second/</link>
      <pubDate>Mon, 17 May 2021 10:41:26 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/rancher-monitor-config-second/</guid>
      <description>环境说明 上期 介绍了 rancher prometheus operator 的安装和基础 targets 的修复工作。有的时候我们抓取的 exporter metrics 并不在同集群且与集群没有任何关联时，应该怎么和 rancher monitor 进行关联配置呢？下</description>
    </item>
    
    <item>
      <title>Rancher 开启监控，及生产应用的优化配置工作说明 (一)</title>
      <link>https://cdryzun.github.io/post/rancher-monitor-config-first/</link>
      <pubDate>Mon, 17 May 2021 10:41:26 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/rancher-monitor-config-first/</guid>
      <description>环境说明 kubernetes version: v1.17.9 rancher dashboard: v2.3.5 操作系统: centos 7.8.2003 基础环境配置 使用 kubekey 部署 kubernetes 集群 由于篇幅原因，此处省略部署说明，请参考较早期的 文档说明 rancher 单机部署 安装 docker-compose 1 yum install -y</description>
    </item>
    
    <item>
      <title>Velero 备份迁移工具的安装</title>
      <link>https://cdryzun.github.io/post/velero-install/</link>
      <pubDate>Sun, 16 May 2021 18:00:36 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/velero-install/</guid>
      <description>组件安装 基础依赖安装 安装 docker-compose 1 yum install -y docker-compose minio 对象存储的安装 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 mkdir -p /data/docker-compose/minio &amp;amp;&amp;amp; cd /data/docker-compose/minio # 创建工作目录 cat &amp;gt; docker-compose.yaml &amp;lt;&amp;lt;</description>
    </item>
    
    <item>
      <title>Maven ReleasePlugin 的使用记录</title>
      <link>https://cdryzun.github.io/post/maven-release-plugin/</link>
      <pubDate>Sun, 16 May 2021 17:52:05 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/maven-release-plugin/</guid>
      <description>maven settings.xml 配置使用展示 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62</description>
    </item>
    
    <item>
      <title>Git 使用问题的记录</title>
      <link>https://cdryzun.github.io/post/git-use-issue/</link>
      <pubDate>Sun, 25 Apr 2021 10:35:57 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/git-use-issue/</guid>
      <description>指定特定仓库拉取代码 1 2 3 4 5 git remote add origin https://github.com/demo/example.git git pull https://repo.csheidou.com/forestry_afterend/prevention_fire_test.git master git branch --set-upstream-to=origin/master git status git pull 更改远程仓库地址 1 2 3 4 5 git remote -v git remote set-url origin https://github.com/demo/example.git git pull origin master --allow-unrelated-histories git push git branch --set-upstream-to=origin/master 清理本地错误的用</description>
    </item>
    
    <item>
      <title>Gitlab pre-receive WebHook 的添加与使用</title>
      <link>https://cdryzun.github.io/post/gitlab-pre-receive-webhook/</link>
      <pubDate>Mon, 12 Apr 2021 17:25:58 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/gitlab-pre-receive-webhook/</guid>
      <description>环境说明 版本使用说明 Gitlab version: 13.10.2 gitlab 服务器安装教程请参考 文档，本文档将示例在 gitlab 中如何添加和配置 pre-receive 钩子，并演示针对 git push 操作做相关的限制操作。 文档参考 gitlab</description>
    </item>
    
    <item>
      <title>Gitlab 和 jira 之间的集成</title>
      <link>https://cdryzun.github.io/post/gitlab-integration-jira/</link>
      <pubDate>Fri, 09 Apr 2021 15:52:44 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/gitlab-integration-jira/</guid>
      <description>环境说明 Gitlab-ce 版本： 13.10.2 Jira 版本：v8.13.4 Jira 获取 工作流结束 id 获取到工作流 结束 id 21 Gitlab 设置全局与 jira 集成 测试效果 找到需要关联 issue id 编辑 文件 commit</description>
    </item>
    
    <item>
      <title>使用 Docker 部署 Gitlab，及常用优化项的说明</title>
      <link>https://cdryzun.github.io/post/gitlab-deploy/</link>
      <pubDate>Thu, 04 Mar 2021 16:31:06 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/gitlab-deploy/</guid>
      <description>环境说明及准备工作 部署 Gitlab 版本说明: 1 docker pull gitlab/gitlab-ce:13.10.2-ce.0 提前拉取好镜像。 docker-compose 版本说明: 1 2 docker-compose --version docker-compose version 1.18.0, build 8dd22a9 docker version: 19.03.9 创建 Docker-Compose 部署文件 Gitlab docker-compose.yaml 部署文件如下所示 1 2 3 4 5 6</description>
    </item>
    
    <item>
      <title>Centos 7 Yum 安装 Jenkins 及常用配置的说明</title>
      <link>https://cdryzun.github.io/post/jenkins-install/</link>
      <pubDate>Tue, 02 Mar 2021 19:31:09 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/jenkins-install/</guid>
      <description>环境说明 操作系统: CentOS Linux release 7.9.2009 (Core) jdk 使用说明: openjdk 1.8.0_282 jenkins 版本： 最新 长期支持版本 Jenkins 安装 这里 Jenkins 的安装方式为使用 yum 包管理进行安装，文档参考。 安装 jdk 1 2 3 4 5</description>
    </item>
    
    <item>
      <title>Jira &amp; confluence 安装 并 配置 破解激活</title>
      <link>https://cdryzun.github.io/post/jira-install/</link>
      <pubDate>Sun, 21 Feb 2021 11:02:00 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/jira-install/</guid>
      <description>环境说明 操作系统: Centos 安装 Jira 版本: 8.13.4 使用数据库: Mysql 5.7 jdk 版本: openjdk 1.8 官方 jira 最新版本查看地址 环境初始化 安装 jdk 1 2 3 4 5 6 yum install -y java-1.8.0-openjdk [root@jira ~]# java -version openjdk version &amp;#34;1.8.0_282&amp;#34; OpenJDK Runtime Environment</description>
    </item>
    
    <item>
      <title>在 Kubernetes 中部署 nfs storageClass</title>
      <link>https://cdryzun.github.io/post/k8s-nfs-strage-class/</link>
      <pubDate>Tue, 19 Jan 2021 14:54:30 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/k8s-nfs-strage-class/</guid>
      <description>环境说明： helm version: v3.4.2 kubernetes version: v1.19.6 nfs server: 192.168.8.66 sub-net: 192.168.8.0/24 nfs 服务端配置 1 yum install rpcbind nfs-utils -y # 安装 nfs server 创建用户 &amp;amp; 数据目录 1 2 3 4 5 6 7 8 9 groupadd -g 2233 nfs-user useradd nfs-user -M -s /sbin/nologin -u 2233 -g nfs-user id nfs-user mkdir -p /data/nfs.sharedir chown</description>
    </item>
    
    <item>
      <title>初探 Traefik ingress gateway</title>
      <link>https://cdryzun.github.io/post/ingress-traefik/</link>
      <pubDate>Sun, 17 Jan 2021 16:15:32 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/ingress-traefik/</guid>
      <description>Traefik 基础概念说明 Traefik 是一个 开源 的边缘路由器，使发布服务变得有趣而轻松，是你整个平台的大门，拦截并匹配每一个传入的请求：它掌管着所有的匹配逻辑和路</description>
    </item>
    
    <item>
      <title>使用 Docker 部署 Nexus3 私服的详细记录总结</title>
      <link>https://cdryzun.github.io/post/docker-deploy-nexus3-upgrade/</link>
      <pubDate>Tue, 22 Dec 2020 09:24:55 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/docker-deploy-nexus3-upgrade/</guid>
      <description>Nexus3.x 说明 功能介绍 Nexus3, 是一款支持仓库种类繁多的私服仓库管理工具，支持目前大众所知晓的仓库类型如：go、pypi、docker、maven、yum、</description>
    </item>
    
    <item>
      <title>部署 Devops 必备利器 OpenLdap</title>
      <link>https://cdryzun.github.io/post/docker-deploy-ldap/</link>
      <pubDate>Fri, 18 Dec 2020 16:24:43 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/docker-deploy-ldap/</guid>
      <description>环境说明: 操作系统: Centos Docker 版本: 19.03.8 使用容器: osixia/phpldapadmin:latest 、osixia/openldap:latest 、grams/ltb-self-service-p</description>
    </item>
    
    <item>
      <title>Kind 部署本地k8s集群的使用记录</title>
      <link>https://cdryzun.github.io/post/first-kind/</link>
      <pubDate>Sun, 15 Nov 2020 14:24:42 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/first-kind/</guid>
      <description>参考资料 Github 地址 参考博客 安装 1 2 3 curl -Lo ./kind &amp;#34;https://kind.sigs.k8s.io/dl/v0.9.0/kind-$(uname)-amd64&amp;#34; chmod +x ./kind mv ./kind /some-dir-in-your-PATH/kind 启动集群 注意启动集群前 请确认 docker 服务是否启动 1 2 3 4 5 6 7 8 9 10 11 12 docker info|grep -A 2 Server # 确认 是否启</description>
    </item>
    
  </channel>
</rss>
