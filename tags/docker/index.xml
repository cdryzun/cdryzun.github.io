<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on 「Leafy&#39;John」PlayGround</title>
    <link>https://cdryzun.github.io/tags/docker/</link>
    <description>Recent content in docker on 「Leafy&#39;John」PlayGround</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 Oct 2023 16:53:53 +0800</lastBuildDate><atom:link href="https://cdryzun.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Slimtoolkit/Slim 与 Gitlab 集成体验</title>
      <link>https://cdryzun.github.io/post/slimtoolkit-slim-study-1/</link>
      <pubDate>Thu, 05 Oct 2023 16:53:53 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/slimtoolkit-slim-study-1/</guid>
      <description>说明 SlimToolkit/Slim 是一个开源工具，用于优化 Docker 容器的大小、速度和安全性。它可以将容器的大小缩减多达 30 倍，并提高容器的启动速度和安全性。 SlimToolkit/Slim 使用了一种称为 ptrace 的</description>
    </item>
    
    <item>
      <title>Kaniko Docker 镜像构建 初体验</title>
      <link>https://cdryzun.github.io/post/kaniko-image-build/</link>
      <pubDate>Tue, 15 Jun 2021 10:02:48 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/kaniko-image-build/</guid>
      <description>使用 docker 命令直接进行构建 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 echo -n yangzun:123456 | base64 eWFuZ3p1bjoxMjM0NTY= cat &amp;gt;&amp;gt; config.json &amp;lt;&amp;lt; EOF { &amp;#34;auths&amp;#34;: { &amp;#34;https://idocker.io/v2/&amp;#34;: { &amp;#34;auth&amp;#34;: &amp;#34;eWFuZ3p1bjoxMjM0NTY=&amp;#34; } } } EOF [root@node1 kaniko]# ls -lh 总用量 4.0K -rw-r--r-- 1 root root</description>
    </item>
    
    <item>
      <title>Gocron 实践安装，实现统一定时任务管理平台</title>
      <link>https://cdryzun.github.io/post/gocron-install/</link>
      <pubDate>Wed, 26 May 2021 11:29:34 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/gocron-install/</guid>
      <description>部署环境说明 操作系统: CentOS release 7.8.2003 Gocron Version: v1.5.3 Mysql Version: 5.5 Gocron 说明 gocron 是使用 go 语言开发的轻量级定时任务集中调度和管理系统, 可以用于替代 linux-crontab。</description>
    </item>
    
    <item>
      <title>记录一次，因误删容器导致的容器恢复过程</title>
      <link>https://cdryzun.github.io/post/delete-container-reset/</link>
      <pubDate>Thu, 14 Jan 2021 20:09:58 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/delete-container-reset/</guid>
      <description>环境说明 因在日常维护过程中升级了docker的版本 ，碰到了一个 docker 的一个 bug, 导致 docker 服务无法正常启动。在恢复 docker 服务的过程中把 /var/lib/docker/containers 下的所有文件给 清空 了</description>
    </item>
    
    <item>
      <title>Centos7 安装之后必要的初始化操作</title>
      <link>https://cdryzun.github.io/post/centos-init-config/</link>
      <pubDate>Mon, 21 Dec 2020 09:34:01 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/centos-init-config/</guid>
      <description>⚠️ 注意此些操作在Centos7中得到验证且可行，其他发行版本请自己尝试 OS 调优 内核优化 ⚠️ 请更具实践业务场景进行调整，此示例中较适合kube</description>
    </item>
    
    <item>
      <title>Docker 部署的 openWrt 软路由, 并解决无法与宿主机通信问题</title>
      <link>https://cdryzun.github.io/post/n1-docker/</link>
      <pubDate>Sun, 15 Nov 2020 16:09:10 +0800</pubDate>
      
      <guid>https://cdryzun.github.io/post/n1-docker/</guid>
      <description>环境说明 宿主机 IP：192.168.8.102 Docker 内 openWrt macvlan ip: 192.168.8.111 主路由网关：192.168.8.1 机器网段为: 192.168.8.0/24 docker 使用容器: raymondwong/openwrt_r9:21.2.1-arm64 操作系统: ARMBIAN docker 部署 openWrt</description>
    </item>
    
  </channel>
</rss>
